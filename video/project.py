from manim import *

class Project(Scene):
    def construct(self):
        heroku = SVGMobject("./heroku-svgrepo-com.svg",fill_color=WHITE)
        herokulogo = SVGMobject("./heroku-logo-svgrepo-com.svg",fill_color=WHITE)
        nextjs = SVGMobject("./nextjs-svgrepo-com.svg",fill_color=WHITE)
        fastify = SVGMobject("./fastify-svgrepo-com.svg",fill_color=WHITE)
        socketio = SVGMobject("./logo.svg",fill_color=WHITE)
        node = SVGMobject("./nodejs-svgrepo-com.svg",fill_color=WHITE).scale(0.75)
        vercel = SVGMobject("./vercel-svgrepo-com.svg",fill_color=WHITE)
        title = Text("IOT CLOUD PROJECT",weight=BOLD)
        subtitle = Text("Avni Ahuja 20BPS1043  Abhraneel Dey 20BPS1031",weight=BOLD,font_size=25).move_to(DOWN)
        intro = Group(title,subtitle)
        self.play(FadeIn(intro,shift=DOWN))
        self.wait()
        self.play(FadeOut(intro,shift=UP))
        backtext = Text("API Implementation",font_size=25,weight=BOLD).move_to(LEFT*4.5+UP*3)
        self.play(FadeIn(backtext))
        fastifytext = Text("Using AWS Microservices & NodeJs",font_size=25,weight=BOLD).move_to(RIGHT*4.5+UP*3)
        self.play(FadeIn(fastifytext))
        self.play(FadeIn(fastify.move_to(LEFT*2)))
        self.play(FadeIn(node.move_to(RIGHT*2+DOWN*2)))
        self.wait()
        self.play(
            *[FadeOut(mob)for mob in self.mobjects]
        )
        sockettext = Text("Using Socket.IO",font_size=25,weight=BOLD).move_to(LEFT*4.5+UP*3)
        socketinfo = Text("Implementing Real Time Bi-directional",font_size=25,weight=BOLD).move_to(RIGHT*2.5+UP*3)
        socketinfo1 = Text("connection between the microcontrollers",font_size=25,weight=BOLD).move_to(RIGHT*2.5+UP*2.5)
        socketinfo2 = Text("and the fastify server",font_size=25,weight=BOLD).move_to(RIGHT*2.5+UP*2)
        socketgroup = Group(sockettext,socketinfo,socketinfo1,socketinfo2)
        heroku = heroku.move_to(RIGHT*2.5+DOWN)
        herokutext = Text("Hosting on Heroku",font_size=25,weight=BOLD).next_to(heroku,UP*0.5)
        herokugroup = Group(herokutext,heroku.scale(0.5))
        self.play(FadeIn(socketgroup))
        self.play(FadeIn(socketio.move_to(LEFT*4+DOWN)))
        self.play(FadeIn(herokugroup))
        self.wait()
        self.play(
            *[FadeOut(mob)for mob in self.mobjects]
        )
        chip1 = SVGMobject("./chip-svgrepo-com.svg",fill_color=WHITE).move_to(LEFT*4.5+UP*3).scale(0.7)
        chip1text = Text("ESP8266",font_size=25,weight=BOLD).next_to(chip1,DOWN)
        chip1text1 = Text("Actuator",font_size=25,weight=BOLD).next_to(chip1,LEFT)
        chip2 = SVGMobject("./chip-svgrepo-com.svg",fill_color=WHITE).move_to(LEFT*4.5+DOWN*3).scale(0.7)
        chip2text = Text("ESP32",font_size=25,weight=BOLD).next_to(chip2,UP)
        title1 = Text("Connection Overview",font_size=25,weight=BOLD).move_to(RIGHT*4.5+UP*3)
        chip2text1 = Text("Sensor",font_size=25,weight=BOLD).next_to(chip2,LEFT)
        chipgroup = Group(chip1,chip2,chip1text,chip2text,chip1text1,chip2text1,title1)
        vercel = vercel.scale(0.25).move_to(RIGHT*4.5+UP*0.5)
        nextjs = nextjs.scale(0.5).move_to(RIGHT*4.5+DOWN*0.5)
        nextjstext = Text("Hosting on Vercel",font_size=25,weight=BOLD).next_to(nextjs,DOWN*0.5)
        self.play(FadeIn(chipgroup))
        self.play(FadeIn(herokulogo.scale(0.5)))
        groupfront = Group(vercel,nextjs,nextjstext)
        self.play(FadeIn(groupfront))
        # Add arrow from chip1 to heroku
        arrow1 = DoubleArrow(LEFT*4.5+UP*3,ORIGIN,buff=0.7)
        arrow1text = Text("WebSocket Protocol",font_size=25,weight=BOLD).move_to(UP*2)
        arrow1.set_color(ORANGE)
        arrow2 = Arrow(LEFT*4.5+DOWN*3,ORIGIN,buff=0.7)
        arrow2text = Text("HTTP POST",font_size=25,weight=BOLD).move_to(LEFT*0.5+DOWN*2)
        arrow2.set_color(BLUE)
        arrow3 = DoubleArrow(ORIGIN,RIGHT*4,buff=0.7)
        arrowgroup = Group(arrow1,arrow2,arrow1text,arrow2text,arrow3)
        self.play(FadeIn(arrowgroup))
        self.wait(2)
